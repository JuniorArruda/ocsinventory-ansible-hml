


=== Informações do Projeto ===

Estrutura de diretórios do projeto:

/home/gelber/local-git-projects/ctc-tech/ocs-inv_ansible-homolog
├── ansible.cfg
├── files
│   └── packages
│       ├── debian
│       │   └── Ocsinventory-Unix-Agent-2.6.0.tar.gz
│       ├── redhat
│       │   └── ocsinventory-agent-2.6.0-1.el6.ocs.x86_64.rpm
│       └── suse
├── generate_project_prompt.sh
├── group_vars
│   └── all.yml
├── inventory
│   ├── group_vars
│   │   └── all.yml
│   ├── hosts.csv
│   └── inventory.py
├── playbook.yml
├── project_overview.txt
├── README.md
├── roles
│   └── ocs_inventory
│       ├── defaults
│       ├── tasks
│       │   ├── debian.yml
│       │   ├── main.yml
│       │   ├── redhat.yml
│       │   └── suse.yml
│       └── templates
│           ├── ocsinventory-agent.cfg.j2
│           └── run-ocs-agent.sh.j2
├── roolback.yml
├── tasks
│   └── diagnostico.yml
└── templates
    └── diagnostico_report.j2

15 directories, 20 files

Conteúdo dos arquivos selecionados:


=== inventory/group_vars/all.yml ===

---
# Configurações do Servidor OCS
ocs_server_url: "http://10.2.100.50/ocsinventory/"
ocs_server_protocol: "http"
ocs_server_host: "10.2.100.50"
ocs_server_port: "80"
ocs_server_path: "/ocsinventory"

# Configurações do Agente
ocs_agent_frequency: "24" # Frequência em horas (diária)
ocs_agent_logfile: "/var/log/ocsinventory-agent/ocsinventory-agent.log"
ocs_agent_loglevel: "info"
ocs_agent_tag: ""

# Pacotes locais (para máquinas sem acesso à internet)
use_local_packages: true
local_packages_path: "{{ playbook_dir }}/files/packages"

# Configuração de Proxy (se necessário)
http_proxy: ""
https_proxy: ""

# Configurações de Rollback
backup_dir: "/var/backups/ocs_agent_rollback"
enable_rollback: true

ansible_become_pass: "{{ ansible_sudo_pass }}"
=== ansible.cfg ===

[defaults]
inventory = inventory/inventory.py
remote_user = adm_far
host_key_checking = False
retry_files_enabled = False
roles_path = ./roles
log_path = ./ansible.log
timeout = 30
gathering = smart

[privilege_escalation]
become = True
become_method = sudo
become_user = root
become_ask_pass = False

[ssh_connection]
pipelining = True
ssh_args = -o ControlMaster=auto -o ControlPersist=60s -o ConnectTimeout=20
=== playbook.yml ===

---
- name: Pre-flight checks
  hosts: all
  become: yes
  gather_facts: yes
  tags: [always, diagnose]
  tasks:
    - name: Include diagnóstico
      include_tasks: tasks/diagnostico.yml

- name: Instalar e configurar OCS Inventory Agent
  hosts: all
  become: yes
  gather_facts: yes
  roles:
    - ocs_inventory

- name: Verificar instalação
  hosts: all
  become: yes
  gather_facts: no
  tasks:
    - name: Verificar status do agente OCS
      shell: "ps aux | grep -v grep | grep ocsinventory-agent"
      register: ocs_status
      failed_when: false
      changed_when: false

    - name: Exibir status da instalação
      debug:
        msg: "OCS Inventory Agent instalado com sucesso em {{ inventory_hostname }}"
      when: ocs_status.rc == 0

    - name: Registrar hosts com falha
      set_fact:
        installation_failed: true
      when: ocs_status.rc != 0
      delegate_to: localhost
      delegate_facts: true

- hosts: all
  become: yes
  vars:
    backup_dir: "/var/backups/ocsinventory"
  roles:
    - ocs_inventory
