---
- name: Criar diretório de backup para rollback
  file:
    path: "{{ backup_dir }}"
    state: directory
    mode: '0755'
  when: enable_rollback | bool
  
- name: Detectar a família da distribuição
  set_fact:
    is_debian: "{{ ansible_os_family == 'Debian' }}"
    is_redhat: "{{ ansible_os_family == 'RedHat' }}"
    is_suse: "{{ ansible_os_family == 'Suse' }}"

- name: Incluir tarefas específicas para Debian/Ubuntu
  include_tasks: debian.yml
  when: is_debian | bool

- name: Incluir tarefas específicas para RedHat/CentOS
  include_tasks: redhat.yml
  when: is_redhat | bool

- name: Incluir tarefas específicas para SUSE
  include_tasks: suse.yml
  when: is_suse | bool

- name: Criar diretório de configuração
  file:
    path: "/etc/ocsinventory/ocsinventory-agent.cfg.d"
    state: directory
    mode: '0755'

- name: Configurar OCS Inventory Agent
  template:
    src: ocsinventory-agent.cfg.j2
    dest: "/etc/ocsinventory/ocsinventory-agent.cfg.d/00-ocs-ansible.cfg"
    owner: root
    group: root
    mode: '0644'
  register: config_update

- name: Criar script para execução manual do agente
  template:
    src: run-ocs-agent.sh.j2
    dest: /usr/local/bin/run-ocs-agent.sh
    mode: '0755'

- name: Configurar cron para execução diária
  cron:
    name: "OCS Inventory Agent"
    hour: "{{ 23 | random(seed=inventory_hostname) }}"
    minute: "{{ 59 | random(seed=inventory_hostname) }}"
    job: "/usr/local/bin/run-ocs-agent.sh > /dev/null 2>&1"
    user: root

- name: Executar OCS Inventory pela primeira vez
  command: /usr/local/bin/run-ocs-agent.sh
  register: first_run
  failed_when: false
  changed_when: first_run.rc == 0

- name: Registrar status para verificação posterior
  set_fact:
    ocs_agent_installed: true
    ocs_agent_version: "{{ package_version.stdout if package_version is defined else 'unknown' }}"